{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/KeyManagementTable.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const KeyManagementTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call KeyManagementTable() from the server but KeyManagementTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin/KeyManagementTable.tsx <module evaluation>\",\n    \"KeyManagementTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,6EACA","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/KeyManagementTable.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const KeyManagementTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call KeyManagementTable() from the server but KeyManagementTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin/KeyManagementTable.tsx\",\n    \"KeyManagementTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,yDACA","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/shared/PageHeader.tsx"],"sourcesContent":["interface PageHeaderProps {\n    title: string;\n    description?: string;\n    children?: React.ReactNode;\n}\n\nexport function PageHeader({ title, description, children }: PageHeaderProps) {\n    return (\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n            <div>\n                <h1 className=\"text-2xl font-bold tracking-tight font-headline\">{title}</h1>\n                {description && <p className=\"text-muted-foreground mt-1\">{description}</p>}\n            </div>\n            {children && <div className=\"flex-shrink-0\">{children}</div>}\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;;AAMO,SAAS,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAmB;IACxE,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;;kCACG,8OAAC;wBAAG,WAAU;kCAAmD;;;;;;oBAChE,6BAAe,8OAAC;wBAAE,WAAU;kCAA8B;;;;;;;;;;;;YAE9D,0BAAY,8OAAC;gBAAI,WAAU;0BAAiB;;;;;;;;;;;;AAGzD","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/keys/page.tsx"],"sourcesContent":["\nimport { KeyManagementTable } from \"@/components/admin/KeyManagementTable\";\nimport { PageHeader } from \"@/components/shared/PageHeader\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowLeft, PlusCircle } from \"lucide-react\";\nimport Link from \"next/link\";\n\nexport default function KeyManagementPage() {\n  return (\n    <div className=\"flex flex-col gap-8\">\n       <PageHeader \n        title=\"密钥管理\" \n        description=\"为您的智能体和管理员创建、编辑和管理访问密钥。\"\n      >\n        <div className=\"flex items-center gap-2\">\n            <Button asChild variant=\"outline\">\n                <Link href=\"/admin\">\n                    <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                    返回仪表盘\n                </Link>\n            </Button>\n        </div>\n      </PageHeader>\n      <KeyManagementTable />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACZ,8OAAC,0IAAA,CAAA,aAAU;gBACV,OAAM;gBACN,aAAY;0BAEZ,cAAA,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC,kIAAA,CAAA,SAAM;wBAAC,OAAO;wBAAC,SAAQ;kCACpB,cAAA,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;;8CACP,8OAAC,gNAAA,CAAA,YAAS;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;;;;;;;;;;;0BAMpD,8OAAC,iJAAA,CAAA,qBAAkB;;;;;;;;;;;AAGzB","debugId":null}}]
}